{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "dnsNameforLBIP": {
        "type": "string",
        "metadata": {
          "description": "DNS for Load Balancer IP"
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "16.04-LTS",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "lbName": {
        "type": "string",
        "defaultValue": "myLB",
        "metadata": {
          "description": "Load Balancer name"
        }
      },
      "publicIPAddressName": {
        "type": "string",
        "defaultValue": "myPublicIP",
        "metadata": {
          "description": "Public IP Name"
        }
      },
      "vnetName": {
        "type": "string",
        "defaultValue": "myVNET",
        "metadata": {
          "description": "VNET name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "metadata": {
          "description": "Size of the VM"
        }
      }
    },
    "variables": {
      "storageAccountType": "Standard_LRS",
      "availabilitySetName": "myAvSet",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet-1",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressType": "Dynamic",
      "nicNamePrefix1": "node",
      "privateIPAddress1": "10.0.0.5",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('subnetName'))]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
      "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
      "networkSecurityGroupName": "mynsg",
      "secRulesname": "sshrule",
      "secRulesname1": "webrule",
      "vmNamePrefix1": "node"
    },
    "resources": [
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySetName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-04-30-preview",
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2,
          "managed": true
        }
      },
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[resourceGroup().location]",
        "comments": "NSG for Software server",
        "properties": {
          "securityRules": [
            {
              "name": "ssh_Port",
              "properties": {
                "description": "This is the first rule",
                "protocol": "Tcp",
                "sourcePortRange": "22",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
                "name": "webapi",
                "properties": {
                  "description": "This is the first rule",
                  "protocol": "Tcp",
                  "sourcePortRange": "8080",
                  "destinationPortRange": "8080",
                  "sourceAddressPrefix": "*",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 110,
                  "direction": "Inbound"
                }
              }
          ]
        }
   },
   {
    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
    "name": "[concat(variables('networkSecurityGroupName'), '/', variables('secRulesname'))]",
    "apiVersion": "2018-02-01",
    "location": "[resourceGroup().location]",
    "comments": "ssh rule",
    "scale": null,
    "dependsOn": [
      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
  ],
    "properties":{
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 135,
        "direction": "Inbound"
    }
  },{
    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
    "name": "[concat(variables('networkSecurityGroupName'), '/', variables('secRulesname1'))]",
    "apiVersion": "2018-02-01",
    "location": "[resourceGroup().location]",
    "scale": null,
    "dependsOn": [
      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
  ],
    "properties":{
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "8080",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 115,
        "direction": "Inbound"
    }
  },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsNameforLBIP')]"
          }
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('vnetName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
  ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                   }
              }
            }
          ]
        }
      },
      {
          "apiVersion": "2015-05-01-preview",
          "name": "[parameters('lbName')]",
          "type": "Microsoft.Network/loadBalancers",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
          ],
          "properties": {
            "frontendIPConfigurations": [
              {
                "name": "LoadBalancerFrontEnd",
                "properties": {
                  "publicIPAddress": {
                    "id": "[variables('publicIPAddressID')]"
                  }
                }
              }
            ],
            "backendAddressPools": [
              {
                "name": "BackendPool1"
              }
            ],
            "loadBalancingRules": [
              {
                "name": "LBRule",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "[variables('frontEndIPConfigID')]"
                  },
                  "backendAddressPool": {
                    "id": "[variables('lbPoolID')]"
                  },
                  "protocol": "tcp",
                  "frontendPort": 80,
                  "backendPort": 80,
                  "enableFloatingIP": false,
                  "idleTimeoutInMinutes": 5,
                  "probe": {
                    "id": "[variables('lbProbeID')]"
                  }
                }
              }
            ],
            "probes": [
              {
                "name": "tcpProbe",
                "properties": {
                  "protocol": "tcp",
                  "port": 80,
                  "intervalInSeconds": 5,
                  "numberOfProbes": 2
                }
              }
            ],
            "inboundNatRules": [
              {
                  "name": "NATssh1",
                  "properties": {
                      "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                      },
                      "frontendPort": 3000,
                      "backendPort": 22,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "Tcp",
                      "enableTcpReset": false
                  }
              },
              {
                "name": "web",
                "properties": {
                    "frontendIPConfiguration": {
                      "id": "[variables('frontEndIPConfigID')]"
                    },
                    "frontendPort": 8080,
                    "backendPort": 8080,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "enableTcpReset": false
                }
            }
          ]
          }
        },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicNamePrefix1'))]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
          "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('privateIPAddress1')]",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "[concat(variables('lbID'),'/inboundNatRules/NATssh1')]"
                  },
                  {
                    "id": "[concat(variables('lbID'),'/inboundNatRules/web')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('vmNamePrefix1'))]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix1'))]",
          "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(variables('vmNamePrefix1'))]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix1')))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": "false"
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmNamePrefix1'),'/extensions')]",
        "apiVersion": "2018-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix1'))]"
        ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                    "https://raw.githubusercontent.com/sangaml/Hyperledger_Fabric_Cluster-composer/master/hyperledger.sh"
                ]
            },
            "protectedSettings": {
                "commandToExecute": "./hyperledger.sh"
            }
        }
    }
    ]
  }
